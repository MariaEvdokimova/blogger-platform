paths:
  /auth/login:
    post:
      summary: Try login user to the system
      tags: [ Auth ]
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginInputModel'
          text/json:
            schema:
              $ref: '#/components/schemas/LoginInputModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/LoginInputModel'
      responses:
        200:
          description: Returns JWT accessToken (expired after 10 seconds) in body and JWT refreshToken in cookie (http-only, secure) (expired after 20 seconds).
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/LoginSuccessViewModel'
            application/json:
              schema:
                $ref: '#/components/schemas/LoginSuccessViewModel'
            text/json:
              schema:
                $ref: '#/components/schemas/LoginSuccessViewModel'
        400:
          description: If the inputModel has incorrect values
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/APIErrorResult'
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResult'
            text/json:
              schema:
                $ref: '#/components/schemas/APIErrorResult'
        401: 
          description: If the password or login is wrong
        429:
          description: More than 5 attempts from one IP-address during 10 seconds

  /auth/password-recovery:
    post:
      summary: Password recovery via Email confirmation. Email should be sent with RecoveryCode inside
      tags:
        - Auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordRecoveryInputModel'
          text/json:
            schema:
              $ref: '#/components/schemas/PasswordRecoveryInputModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/PasswordRecoveryInputModel'
      responses:
        204:
          description: Even if current email is not registered (for prevent user's email detection)
        400:
          description: If the inputModel has invalid email (for example 222^gmail.com)
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/APIErrorResult'
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResult'
            text/json:
              schema:
                $ref: '#/components/schemas/APIErrorResult'
        429:
          description: More than 5 attempts from one IP-address during 10 seconds

  /auth/new-password:
    post:
      summary: Confirm Password recovery
      tags:
        - Auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewPasswordRecoveryInputModel'
          text/json:
            schema:
              $ref: '#/components/schemas/NewPasswordRecoveryInputModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/NewPasswordRecoveryInputModel'
      responses:
        204:
          description: If code is valid and new password is accepted
        400:
          description: If the inputModel has incorrect value (for incorrect password length) or RecoveryCode is incorrect or expired
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/APIErrorResult'
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResult'
            text/json:
              schema:
                $ref: '#/components/schemas/APIErrorResult'
        429:
          description: More than 5 attempts from one IP-address during 10 seconds

  /auth/refresh-token:
    post:
      summary: Generate new pair of access and refresh tokens (in cookie client must send correct refreshToken that will be revoked after refreshing)
      tags: [ Auth ]
      security:
        - refreshToken: [] 
      responses:
        200:
          description: Returns JWT accessToken (expired after 10 seconds) in body and JWT refreshToken in cookie (http-only, secure) (expired after 20 seconds).
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/LoginSuccessViewModel'
            application/json:
              schema:
                $ref: '#/components/schemas/LoginSuccessViewModel'
            text/json:
              schema:
                $ref: '#/components/schemas/LoginSuccessViewModel'
        401: 
          description: Unauthorized

  /auth/registration-confirmation:
    post:
      summary: Confirm registration
      tags:
        - Auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegistrationConfirmationCodeModel'
          text/json:
            schema:
              $ref: '#/components/schemas/RegistrationConfirmationCodeModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/RegistrationConfirmationCodeModel'
      responses:
        204:
          description: Email was verified. Account was activated
        400:
          description: If the confirmation code is incorrect, expired or already been applied
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/APIErrorResult'
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResult'
            text/json:
              schema:
                $ref: '#/components/schemas/APIErrorResult'
        429:
          description: More than 5 attempts from one IP-address during 10 seconds

  /auth/registration:
    post:
      summary: Registration in the system. Email with confirmation code will be send to passed email address
      tags:
        - Auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserInputModel'
          text/json:
            schema:
              $ref: '#/components/schemas/UserInputModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/UserInputModel'
      responses:
        204:
          description: "Input data is accepted. Email with confirmation code will be send to passed email address. Confirmation code should be inside link as query param, for example: https://some-front.com/confirm-registration?code=youtcodehere"
        400:
          description: If the inputModel has incorrect values (in particular if the user with the given email or login already exists)
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/APIErrorResult'
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResult'
            text/json:
              schema:
                $ref: '#/components/schemas/APIErrorResult'
        429:
          description: More than 5 attempts from one IP-address during 10 seconds
  
  /auth/registration-email-resending:
    post:
      summary: Registration in the system
      tags:
        - Auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegistrationEmailResending'
          text/json:
            schema:
              $ref: '#/components/schemas/RegistrationEmailResending'
          application/*+json:
            schema:
              $ref: '#/components/schemas/RegistrationEmailResending'
      responses:
        204:
          description: Email was verified. Account was activated
        400:
          description: If the inputModel has incorrect values or if email is already confirmed
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/APIErrorResult'
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResult'
            text/json:
              schema:
                $ref: '#/components/schemas/APIErrorResult'
        429:
          description: More than 5 attempts from one IP-address during 10 seconds

  /auth/logout:
    post:
      summary: In cookie client must send correct refreshToken that will be revoked
      tags: [ Auth ]
      security:
        - refreshToken: [] 
      responses:
        204:
          description: No Content
        401: 
          description: Unauthorized

  /auth/me:
    get:
      summary: Get information about current user
      tags:
        - Auth
      security:
        - bearerAuth: []
      responses:
        200:
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/MeViewModel'
            application/json:
              schema:
                $ref: '#/components/schemas/MeViewModel'
            text/json:
              schema:
                $ref: '#/components/schemas/MeViewModel'
        401:
          description: Unauthorized

components:
  securitySchemes:
    refreshToken:
      type: apiKey
      in: cookie
      name: refreshToken
      description: "JWT refreshToken inside cookie. Must be correct, and must not expire"
  schemas:
    APIErrorResult:
      type: object
      properties:
        errorsMessages:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/FieldError'
    
    FieldError:
      type: object
      properties:
        message:
          type: string
          nullable: true
          description: "Message with error explanation for certain field"
        field:
          type: string
          nullable: true
          description: "What field/property of input model has error"
    
    LoginInputModel:
      type: object
      required:
        - loginOrEmail
        - password
      properties:
        loginOrEmail:
          type: string
        password:
          type: string
    
    LoginSuccessViewModel:
      type: object
      required:
        - accessToken
      properties:
        accessToken:
          type: string
    
    MeViewModel:
      type: object
      required:
        - email
        - login
        - userId
      properties:
        email:
          type: string
        login:
          type: string
        userId:
          type: string
      
    RegistrationConfirmationCodeModel:
      type: object
      required:
        - code
      properties:
        code:
          type: string
          description: Code that be sent via Email inside link
    
    PasswordRecoveryInputModel:
      type: object
      required:
        - email
      properties:
        email:
          type: string
          pattern: ^[\w-\.]+@([\w-]+\.)+[\w-]{2,4}$
          example: example@example.com
          description: Email of registered user

    NewPasswordRecoveryInputModel:
      type: object
      required:
        - newPassword
        - recoveryCode
      properties:
        newPassword:
          type: string
          maxLength: 20
          minLength: 6
          description: New password
        recoveryCode:
          type: string
          description: New password

    RegistrationEmailResending:
      type: object
      required:
        - email
      properties:
        email:
          type: string
          pattern: ^[\w-\.]+@([\w-]+\.)+[\w-]{2,4}$
          example: example@example.com
          description: Email of already registered but not confirmed user
    